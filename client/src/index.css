/* Step 1: Define a two-column layout */
.container {
	display: grid;
	grid-template-columns: 1fr 1fr; /* Creates two columns of equal width */
	gap: 20px; /* Adjust the gap between columns as needed */
	
  }

  /* You can adjust the .first-column and .second-column classes as needed to apply specific styles to each column's content */
  
  /* Step 2: Apply provided styles (Tailwind and custom CSS) to content in the second column */
  
  /* Tailwind directives (Note: these are processed by Tailwind CSS during build and won't appear in the final CSS) */
  @tailwind base;
  @tailwind components;
  @tailwind utilities;
  
  /* Custom component layer and other styles specifically for content in the second column */
  @layer components {
	.scroll-width {
	  scrollbar-width: thin;
	}
  
	.b-bottom > tr {
	  @apply border border-solid border-slate-100;
	}
  
	.b-color-even > tr:nth-of-type(even) {
	  @apply bg-[#f3f3f3];
	}
  
	.b-color-last > tr:last-of-type {
	  @apply border-2 border-solid border-b-green-700;
	}
  
	.b-color-none > tr:last-of-type {
	  @apply border-none;
	}
  }
  
  /* Global styles that affect the whole page */
  *,
  ::after,
  ::before {
	box-sizing: border-box;
	margin: 0;
	padding: 0;
  }
  
  :root {
	box-sizing: border-box;
	font-family: Inter, Avenir, Helvetica, Arial, sans-serif;
	font-size: 16px;
	line-height: 24px;
	font-weight: 400;
	font-synthesis: none;
	text-rendering: optimizeLegibility;
  }

  .Embed-container {
	height: 63vh; /* Adjust the height to 75% of the viewport height */
	width: 90%; /* Use the full width of the container */
	margin-top: 10px;
	display: flex; /* Use flexbox for alignment */
	justify-content: center; /* Center content horizontally */
	align-items: center; /* Center content vertically */
	margin-left: 10vh;
  }
  
  .index-link {
	fontFamily: Arial, sans-serif;
	color: #FFFFFF;
	whiteSpace: nowrap;
	fontSize: 1.3rem;
	maxWidth: 100%;
	flexGrow: 1;
    flexShrink: 1;
	alignItems: 'center';
    flex: 1;
    justifyContent: 'center';
  }